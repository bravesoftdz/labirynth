procedure TVisualisator.drawpixel(AColor: TColor; ARel: TLPlayerPosition);
var
  ximax, xi, x, yimax, yi, y: Integer;
  xdiv, ydiv: Extended;           //Arányszám (pl.: 1/22)-\|/
begin                             //                       |
  xdiv:=Level.ViewSize.x/ARel.x;  //    <------------------|
  ydiv:=Level.ViewSize.y/ARel.y;  //    <------------------|

  ximax:=0;
  for xi:=-ximax to ximax do
  begin
    x:=round(Canvas.Width/2+x+ARel.Fx);
    yimax:=round(ydiv*Canvas.Height);
    for yi:=-yimax to yimax do
    begin
      y:=round(Canvas.Height/2+yi);
      Canvas.Pixels[x, y]:=AColor;
    end;
  end;
end;

procedure TVisualisator.draw;
  procedure drawPixelI(
    X, Y, i, j: Extended;
    cl: TColor
  );
  var
    Xmax, Ymax, cXmax, cYmax: Extended;
  begin
    Ymax:=Level.ViewSize.y;
    Xmax:=Level.ViewSize.x/2;
    Xmax:=Xmax*(Y)/Ymax;
    cXmax:=canvas.Width/2;
    cYmax:=Canvas.Height/2;
    {$IfDef WINDOWS}
      if xmax=0 then xmax:=1;
    {$EndIf}
    Canvas.Pixels[
      round(cXmax+cXmax*X/Xmax+j),
      round(cYmax+i)
    ]:=cl;
  end;
  procedure drawPixelI(X, Y, i, imax, j, jmax: Extended);
  var
    cl: TColor;
    //imax: Integer;
  begin
    //imax:=10;
    cl:=RGBToColor(round(255*(Y*Y)/(Level.ViewSize.y*Level.ViewSize.y)),
                   round(255*abs(imax+i)/abs(imax+imax)),
                   round(255*Y/Level.ViewSize.y/2)
    );
    drawPixelI(X, Y, i, j, cl);
  end;
var
  fullPosition: TLPlayerPosition;
  X, Xmax, Y, Ymax, imax, jmax, dir:Extended;
  mX, mY, i, j: Integer;
begin
  if not (dbg or animate) then Visible:=False;
  Canvas.Clear;
  Ymax:=Level.ViewSize.y;
  for mY:=-round(Ymax) to 0 do
  begin
    Y:=-mY;
    Xmax:=Level.ViewSize.x/2;
    Xmax:=Xmax*(Y)/Ymax;
    for mX:=-round(Xmax) to round(Xmax) do
    begin
      X:=-mX;
      {$IfNDef WINDOWS}
        if animate then Sleep(1);
      {$EndIf}
      if dbg or Animate then Application.ProcessMessages;
      dir:=Level.PlayerPosition.direction;
      fullPosition:=TLPlayerPosition.Create;
      fullPosition.X:=Level.PlayerPosition.coords.X+round(sin(dir)*Y+cos(dir)*X);
      fullPosition.Y:=Level.PlayerPosition.coords.Y-round(cos(dir)*Y-sin(dir)*X);
      fullPosition.direction:=Level.PlayerPosition.direction+0;
      if Level.isPlayerPosition(fullPosition) then
      begin
        if dbg then Canvas.Pixels[fullPosition.coords.X, fullPosition.coords.Y]:=clGreen;
        if Level.data.Canvas.Pixels[fullPosition.coords.X, fullPosition.coords.Y]=clBlack then
        begin
          if dbg then Canvas.Pixels[fullPosition.coords.X, fullPosition.coords.Y]:=clRed;
          imax:=Ymax-(Canvas.Height/2*Y/Ymax);
          {$IfDef WINDOWS}
            if xmax=0 then xmax:=1;
          {$EndIf}
          jmax:=Canvas.Width/Xmax/2;
          //if animate then jmax:=0;
          for j:=-round(jmax) to round(jmax) do
          begin
            for i:=-round(imax) to round(imax) do
              drawPixelI(x, y, i, imax, j, jmax);
            if not animate and DrawCorner then
            begin
              drawPixelI(x, y, -imax, j, clBlack);
              drawPixelI(x, y, +imax, j, clBlack);
            end;
          end;
        end;
      end;
    end;
  end;
  Visible:=True;
  //if animate then Animate:=False;
end;